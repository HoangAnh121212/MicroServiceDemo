# MySQL datasource config
#spring.datasource.url=jdbc:mysql://localhost:3306/order_service?useSSL=false&serverTimezone=UTC
spring.datasource.url=jdbc:mysql://mysql-order:3306/order_service?useSSL=false&serverTimezone=UTC

spring.datasource.username=root
spring.datasource.password=12012002
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Server port
server.port=8085
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka

spring.application.name=order-service
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Kich hoat bo ngat mach (Circuit Breaker)
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4j Properties

# 1. Cho phep hien thi trang thai health (UP/DOWN) cua Circuit Breaker trong actuator
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
# 2. So luong su kien toi se duoc ghi trong bo dem event (log, metrics, dashboard...)
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
# 3. Loai cua so theo doi: dem so lan goi (COUNT) hoac theo thoi gian (TIME)
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
# 4. Kich thuoc cua so truot, tuc la xet tren bao nhieu lan goi gan nhat
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
# 5. Neu ti le loi vuot qua 50% trong 5 lan goi gan nhat thi mo mach (Circuit Open)
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
# 6. Khi Circuit Breaker mo, no se "nghi" trong 5 giay truoc khi thu goi lai
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
# 7. Trong trang thai HALF-OPEN (thu lai), chi cho phep 3 request duoc goi de kiem tra xem service co on chua
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
# 8. Cho phep Circuit Breaker tu dong chuyen tu trang thai OPEN sang HALF-OPEN ma khong can goi tay
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

# CLOSED: Binh thuong, goi API thoai mai
# OPEN: API loi nhieu, chan toan bo request de bao ve he thong
# HALF-OPEN: Thu lai vai request de xem API da on chua
# Dong lai (CLOSED): Neu cac request thu lai thanh cong

# Resilience4j Timeout properties
# Thoi gian call doi la 3s
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

# Resilience4j Retry properties
# Tuc la chay call lai API, chay thu lai
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s
# Vi du: Ban goi inventory-service, nhung no bi loi.
# Resilience4j se:
#
# Doi 5 giay (wait-duration=5s)
#
# Goi lai yeu cau lan nua.

# Cau hinh Zipkin
#management.tracing.sampling.probability=1.0
##management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
#management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans


# Kafka Properties
#spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.bootstrap-servers=broker:9092

spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Tai vi no khong biet lay OrderPlaceEvent tu service order hay ben notification service, nen phai chi ro ra
spring.kafka.producer.properties.spring.json.type.mapping=event:com.micro.order_service.event.OrderPlaceEvent
# logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
