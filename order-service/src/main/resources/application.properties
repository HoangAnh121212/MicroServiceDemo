# MySQL datasource config
spring.datasource.url=jdbc:mysql://localhost:3306/order_service?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=12012002
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Server port
server.port=8085
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=order-service
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

#kich hoat bo ngat mach
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#inventory la ten dat cho nhung cai can cho , co the dat la ten khac, sao cho giong voi ben anotation ordercontroller la dc
#Resilinece4j Properties
# 1. Cho phép hi?n th? tr?ng thái health (UP/DOWN) c?a Circuit Breaker trong actuator
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
# 2. S? l??ng s? ki?n t?i ?a ???c gi? trong b? ??m event (log, metrics, dashboard...)
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
# 3. Lo?i c?a s? theo dõi: ??m s? l??ng g?i (COUNT) ho?c theo th?i gian (TIME)
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
# 4. Kích th??c c?a s? tr??t, t?c là xét trên bao nhiêu l?n g?i g?n nh?t
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
# 5. N?u t? l? l?i v??t quá 50% trong 5 l?n g?i g?n nh?t ? M? m?ch (Circuit m?)
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
# 6. Khi Circuit Breaker m?, nó s? "ngh?" trong 5 giây tr??c khi th? g?i l?i
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
# 7. Trong tr?ng thái HALF-OPEN (th? l?i), ch? cho phép 3 request ???c g?i ?? test service có ?n ch?a
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
# 8. Cho phép Circuit Breaker t? ??ng chuy?n t? tr?ng thái OPEN ? HALF-OPEN mà không c?n g?i tay
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#CLOSED	Bình th??ng, g?i API tho?i mái
#OPEN	API l?i nhi?u ? ch?n toàn b? request ?? b?o v? h? th?ng
#HALF-OPEN	Th? l?i vài request ?? xem API ?ã ?n ch?a
#?óng l?i (CLOSED)	N?u các request th? l?i thành công


#Resilinece4j Timeout properties
#thoi gian call doi la 3s
resilience4j.timelimiter.instances.inventory.timeout-duration=3s


#Resilinece4j Retry properties
#tuc la chay call lai api , chay thu lai
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s
#vi du B?n g?i inventory-service, nh?ng nó b? l?i.
#Resilience4j s?:
#
#??i 5 giây (wait-duration=5s)
#
#G?i l?i yêu c?u l?n n?a.

#cau hinh zipkin
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

#Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#tai vi no khong biet lay OrderPlaceEvent tu service order hay ben notification servce , nen phai chi ro ra
spring.kafka.producer.properties.spring.json.type.mapping=event:com.micro.order_service.event.OrderPlaceEvent
#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]






