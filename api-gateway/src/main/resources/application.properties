spring.application.name=api-gateway
eureka.client.service-url.defaultZone=http://localhost:8761/eureka


#in ra log de check thoi ko quan trong
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator =INFO
logging.level.org.springframework.cloud.gateway = TRACE

 ## product service route
spring.cloud.gateway.routes[0].id=product-service
#nhap lb la de can bang tai
spring.cloud.gateway.routes[0].uri=lb://product-service
#N?u client g?i request t?i /api/product, thì route này s? ???c ch?n ?? x? lý.
#Predicate ngh?a là ?i?u ki?n l?c ? gi?ng nh? ?n?u ???ng d?n là /api/product thì x? lý route này?.
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product


## order service route
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

eureka.username=${EUREKA_USERNAME:eureka}
eureka.password=${EUREKA_PASSWORD:password}

## dicovery service route
spring.cloud.gateway.routes[2].id=discovery-service
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

## dicovery service static resources route
spring.cloud.gateway.routes[3].id=discovery-service-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**


#ddang test dat port nao do , vì docker ?ang ch?y trên 8080 nên hãy chay trên c?ng kahcs
server.port=8086

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8081/realms/microservice-test









